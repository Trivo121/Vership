{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Projects\\\\Vership\\\\frontend\\\\src\\\\components\\\\RouteOptimizer\\\\RouteOptimizerPage.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/RouteOptimizer/RouteOptimizerPage.js\nimport React from 'react';\nimport RouteInputForm from './RouteInputForm';\nimport RouteOutputDisplay from './RouteOutputDisplay';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RouteOptimizerPage() {\n  _s();\n  const [routeSuggestions, setRouteSuggestions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [apiError, setApiError] = useState(null); // State for API error message\n\n  const handleRouteSubmit = async formData => {\n    setLoading(true);\n    setRouteSuggestions(null); // Clear previous results\n    setApiError(null); // Clear any previous API error\n\n    try {\n      const response = await fetch('/api/route/calculate-route', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json(); // Try to get error details from backend\n        let errorMessage = `Failed to fetch routes. HTTP error! status: ${response.status}`;\n        if (errorData && errorData.error) {\n          // If backend sent an error message\n          errorMessage += ` - ${errorData.error}`; // Append backend error message\n        }\n        throw new Error(errorMessage); // Throw with more informative message\n      }\n      const data = await response.json();\n      setRouteSuggestions(data.routes);\n    } catch (error) {\n      console.error(\"Error fetching routes:\", error);\n      setApiError(error.message); // Set error message for display\n      setRouteSuggestions(null); // Ensure routeSuggestions is null in error case too\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Cross-Border Route Optimizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RouteInputForm, {\n      onSubmit: handleRouteSubmit,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-gray-600\",\n      children: \"Calculating optimal routes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this), apiError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-red-500\",\n      children: [\"Error: \", apiError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 26\n    }, this), \" \", routeSuggestions && !apiError && /*#__PURE__*/_jsxDEV(RouteOutputDisplay, {\n      routes: routeSuggestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 47\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(RouteOptimizerPage, \"9TReiL8YzmpeAPR3c2ImHfbhL2Q=\");\n_c = RouteOptimizerPage;\nexport default RouteOptimizerPage;\nvar _c;\n$RefreshReg$(_c, \"RouteOptimizerPage\");","map":{"version":3,"names":["React","RouteInputForm","RouteOutputDisplay","useState","jsxDEV","_jsxDEV","RouteOptimizerPage","_s","routeSuggestions","setRouteSuggestions","loading","setLoading","apiError","setApiError","handleRouteSubmit","formData","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","errorMessage","status","error","Error","data","routes","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["D:/Study/Projects/Vership/frontend/src/components/RouteOptimizer/RouteOptimizerPage.js"],"sourcesContent":["// frontend/src/components/RouteOptimizer/RouteOptimizerPage.js\r\nimport React from 'react';\r\nimport RouteInputForm from './RouteInputForm';\r\nimport RouteOutputDisplay from './RouteOutputDisplay';\r\nimport { useState } from 'react';\r\n\r\nfunction RouteOptimizerPage() {\r\n    const [routeSuggestions, setRouteSuggestions] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [apiError, setApiError] = useState(null); // State for API error message\r\n\r\n    const handleRouteSubmit = async (formData) => {\r\n        setLoading(true);\r\n        setRouteSuggestions(null); // Clear previous results\r\n        setApiError(null); // Clear any previous API error\r\n\r\n        try {\r\n            const response = await fetch('/api/route/calculate-route', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errorData = await response.json(); // Try to get error details from backend\r\n                let errorMessage = `Failed to fetch routes. HTTP error! status: ${response.status}`;\r\n                if (errorData && errorData.error) { // If backend sent an error message\r\n                    errorMessage += ` - ${errorData.error}`; // Append backend error message\r\n                }\r\n                throw new Error(errorMessage); // Throw with more informative message\r\n            }\r\n            const data = await response.json();\r\n            setRouteSuggestions(data.routes);\r\n        } catch (error) {\r\n            console.error(\"Error fetching routes:\", error);\r\n            setApiError(error.message); // Set error message for display\r\n            setRouteSuggestions(null); // Ensure routeSuggestions is null in error case too\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"p-6\">\r\n            <h2 className=\"text-xl font-semibold mb-4\">Cross-Border Route Optimizer</h2>\r\n            <RouteInputForm onSubmit={handleRouteSubmit} loading={loading} />\r\n            {loading && <p className=\"mt-4 text-gray-600\">Calculating optimal routes...</p>}\r\n            {apiError && <p className=\"mt-4 text-red-500\">Error: {apiError}</p>} {/* Display API error */}\r\n            {routeSuggestions && !apiError && <RouteOutputDisplay routes={routeSuggestions} />} {/* Only display routes if no API error */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RouteOptimizerPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}